<?php

declare(strict_types=1);

namespace App\Tests\Integration\Infrastructure\Controller\Map;

use App\Tests\Integration\Infrastructure\Controller\AbstractWebTestCase;

final class MapControllerTest extends AbstractWebTestCase
{
    public function testGet(): void
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/carte');

        $this->assertResponseStatusCodeSame(200);
        $this->assertSecurityHeaders();
        $this->assertMetaTitle('Carte - DiaLog', $crawler);
        $this->assertSame('{"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"LineString","coordinates":[[1.35643852,44.01573612],[1.354256366,44.016628823]]},"properties":{"location_uuid":"06548f85-d545-7b45-8000-8a23c45850b3","measure_type":"noEntry"}},{"type":"Feature","geometry":{"type":"LineString","coordinates":[[4.813813598,49.591846975],[4.814740991,49.591873571],[4.816667381,49.592113537],[4.818187712,49.592210337],[4.819289813,49.592484173],[4.819889992,49.59252462],[4.829814141,49.591086495],[4.830170433,49.590879775],[4.830722512,49.590075935],[4.831041199,49.589784384],[4.831403969,49.589565876],[4.833546609,49.588543864],[4.834215703,49.588230832],[4.836971699,49.587235446],[4.837376079,49.587137641],[4.838472209,49.587013183],[4.839237347,49.586796648],[4.840037366,49.586396205],[4.841639596,49.585426275],[4.842908002,49.584902749],[4.843561098,49.584686088],[4.849655173,49.582987972],[4.850304524,49.582898976],[4.851311595,49.583030147],[4.851880087,49.582922598],[4.852786076,49.582589666],[4.854663703,49.581751986],[4.855401273,49.581503406],[4.857518763,49.580916405],[4.858136813,49.580613005],[4.859253989,49.579700589],[4.861152737,49.578726744],[4.863674717,49.577253393],[4.865404244,49.576040265],[4.867717907,49.574889139],[4.869863647,49.574064163],[4.870349249,49.57373397],[4.870681327,49.572870386],[4.87101305,49.572490424],[4.872740733,49.57150104],[4.873072333,49.571118377],[4.873345767,49.570543342],[4.87385572,49.570200173],[4.874742902,49.569740608],[4.875011836,49.569535096],[4.875258088,49.569162733],[4.875670018,49.567763933],[4.875814693,49.567411116],[4.876148691,49.566830641],[4.876363964,49.566594491],[4.87652815,49.566511049],[4.876749592,49.566481557],[4.878555698,49.5668887],[4.879036074,49.56691003],[4.879470406,49.566843976],[4.880579284,49.566553527],[4.880974307,49.566395488],[4.881244711,49.566193533],[4.882047478,49.565282158],[4.882265058,49.565147541],[4.882514114,49.565079854],[4.8850042,49.56495581],[4.886017708,49.564742301],[4.887448256,49.564331725],[4.887803303,49.564929388],[4.887977011,49.565105573],[4.888214995,49.565150414],[4.888984026,49.565053948],[4.88940902,49.565148014],[4.889549246,49.565277974],[4.889719641,49.565626804],[4.8900792,49.566083257],[4.890408287,49.566425119],[4.890621101,49.566536868],[4.895232631,49.566333708],[4.895596514,49.566344207],[4.895749664,49.566411932],[4.895795549,49.566531672],[4.895722966,49.566961597],[4.895411684,49.568076638],[4.894544659,49.569376543],[4.894218132,49.570229329],[4.893982229,49.571028561],[4.893942947,49.571350091],[4.894030516,49.571625595],[4.894256421,49.571866578],[4.895365423,49.572439863],[4.895801181,49.572748582],[4.89649466,49.573560268],[4.896618374,49.573765987],[4.896628389,49.574111917],[4.89612879,49.575930155],[4.896095023,49.576288454],[4.896138655,49.576945784]]},"properties":{"location_uuid":"065f94ef-ea0a-7ab5-8000-bd5686102151","measure_type":"noEntry"}}]}', $crawler->filter('#locations_as_geojson')->text());
    }

    public function testGetFilters(): void
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/carte?map_filter_form%5Bcategory%5D=permanents_only&map_filter_form%5B_token%5D=4ef8515d4d5e05fb9f.8Zo-nuv_uVZHlzVSYd0sF6Lgr2Sv0ZOEh2efPahYS6g.vP9H-bO00Wcm51QbUuUdfe6SwwnmptT00QLoBJ87CuTF7kTqparQYCLQRg');

        $this->assertResponseStatusCodeSame(200);
        $this->assertSecurityHeaders();
        $this->assertMetaTitle('Carte - DiaLog', $crawler);
        $this->assertSame('{"type":"FeatureCollection","features":[]}', $crawler->filter('#locations_as_geojson')->text());
    }
}
