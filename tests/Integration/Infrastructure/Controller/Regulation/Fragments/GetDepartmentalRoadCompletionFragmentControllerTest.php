<?php

declare(strict_types=1);

namespace App\Tests\Integration\Infrastructure\Controller\Regulation\Fragments;

use App\Tests\Integration\Infrastructure\Controller\AbstractWebTestCase;

final class GetDepartmentalRoadCompletionFragmentControllerTest extends AbstractWebTestCase
{
    public function testDepartmentalRoadAutoComplete(): void
    {
        $client = $this->login();
        $crawler = $client->request('GET', '/_fragment/roads_numbers-completions?search=d32&administrator=Ardennes');

        $this->assertResponseStatusCodeSame(200);
        $this->assertSecurityHeaders();

        $li = $crawler->filter('li');
        $this->assertSame(4, $li->count());

        $this->assertSame('D322A', $li->eq(0)->text());

        $this->assertSame('D324', $li->eq(1)->text());

        $this->assertSame('D322', $li->eq(2)->text());
        $this->assertSame('{"type":"MultiLineString","coordinates":[[[4.66349228,49.8207711],[4.66356107,49.82070816],[4.6636232,49.8206543],[4.66372513,49.82058551],[4.66385317,49.82050828],[4.66399657,49.82043354],[4.66415639,49.82035139],[4.6643028,49.82028379],[4.66443686,49.82022086],[4.66459579,49.82015399],[4.6647601,49.82008166],[4.66497068,49.81997994],[4.66510358,49.81992421],[4.66516665,49.81989908],[4.66524889,49.81986561],[4.6653916,49.81981244],[4.66554403,49.81975914],[4.66569105,49.81971041],[4.66583659,49.819659],[4.66598766,49.81960661],[4.6661384,49.81954435],[4.66630138,49.81947383],[4.66643549,49.81941269],[4.66654713,49.81934377],[4.66661458,49.81928264],[4.66667217,49.81921715],[4.66670863,49.81914297],[4.66672853,49.81907171],[4.66674108,49.81898797],[4.66675569,49.81888263],[4.66677971,49.81876728],[4.66680661,49.81865549],[4.6668415,49.8185328],[4.66687939,49.81841726],[4.66690063,49.81830195],[4.66694507,49.8181315],[4.66697123,49.81803949],[4.66702361,49.81785725],[4.66704884,49.81773649],[4.66707799,49.81760849],[4.66710898,49.81745171],[4.66713811,49.81732281],[4.66714925,49.81728132],[4.66717477,49.81716955],[4.66721287,49.81706029],[4.66725274,49.8169627],[4.66731207,49.81686574],[4.66733993,49.81682582],[4.6674106,49.81673589],[4.66748139,49.81664955],[4.66754429,49.8165768],[4.66762506,49.81649842],[4.66770042,49.8164246],[4.6677868,49.81634794],[4.66785846,49.81628855],[4.66791902,49.81622931],[4.6679917,49.81615823],[4.66807019,49.81609515],[4.66812661,49.81603687],[4.66818729,49.81598122],[4.66823598,49.81589878],[4.66826869,49.81583723],[4.66827963,49.81578945],[4.66828174,49.81572652],[4.66828019,49.81567892],[4.66826496,49.81563779],[4.66824226,49.81558059],[4.66821146,49.81553069],[4.66818182,49.81547358],[4.66811651,49.81538731],[4.66804281,49.81529935],[4.66798193,49.81522111],[4.66791358,49.81512679],[4.66784685,49.81503964],[4.667793,49.81496399],[4.66773333,49.81488034],[4.66769649,49.81481524],[4.66765947,49.81474476],[4.66763648,49.81467857],[4.66762471,49.81461583],[4.66762365,49.8145835],[4.66762582,49.81452236],[4.66764176,49.81445744],[4.66766576,49.81438433],[4.66768981,49.81431301],[4.66772737,49.81422982],[4.6677675,49.81414031],[4.66779968,49.81406259],[4.66780361,49.81405535],[4.66785062,49.81396394],[4.66788339,49.81390419],[4.66791441,49.81383367],[4.66794911,49.81374783],[4.66797877,49.81367823],[4.66798611,49.81364758],[4.66799985,49.81360066],[4.66802278,49.81353744],[4.66802964,49.81349242],[4.66804644,49.81341131],[4.66806383,49.81330594],[4.66808774,49.81323013],[4.66811209,49.81316779],[4.66813797,49.81310993],[4.66816566,49.81306462],[4.66820991,49.81301638],[4.6682352,49.81298279],[4.66825257,49.81296188],[4.66831121,49.8128865],[4.6683889,49.81279917],[4.66842402,49.81276903],[4.66845781,49.81274071],[4.6685488,49.81263523],[4.66862409,49.81255962],[4.66870049,49.812475],[4.66877667,49.8123841],[4.66882559,49.81230884],[4.66887437,49.8122291],[4.66891759,49.81214943],[4.66897975,49.81205422],[4.66902321,49.81198174],[4.66906236,49.81190482],[4.66913916,49.81179054],[4.66920363,49.81168093],[4.66925867,49.81158043],[4.66933273,49.81146709],[4.66938679,49.81137918],[4.66945504,49.81125783],[4.66948803,49.81120526],[4.66954068,49.81111648],[4.66958494,49.81102601],[4.66963472,49.81093457],[4.66966606,49.81087393],[4.66977002,49.81069818],[4.66981223,49.8106302],[4.6698478,49.81057131],[4.66996251,49.81038462],[4.67002539,49.8103541],[4.6700893,49.81031279],[4.6701479,49.81027874],[4.670184,2,49.8102423],[4.670205,49.81019888],[4.67022078,49.81017171],[4.67021907,49.81011961],[4.67022023,49.81007017],[4.67021346,49.80999029],[4.67020376,49.80990595],[4.67019022,49.80978931],[4.67017235,49.80966734],[4.67016174,49.80955516],[4.67013076,49.8094145],[4.67009612,49.80924694],[4.67005575,49.80911629],[4.6700172,49.8089991],[4.66997733,49.80888372],[4.66993016,49.80875766],[4.66987913,49.80864064],[4.66982496,49.80851288],[4.66976633,49.80841843],[4.66961115,49.8081312],[4.66944291,49.8078693],[4.66932378,49.80770828],[4.66916853,49.80750372],[4.66905266,49.8073148],[4.66897202,49.80714157],[4.66893579,49.80700997],[4.66892124,49.80681966],[4.66892959,49.80656524],[4.6689617,49.80635811],[4.66900288,49.80600349],[4.6690427,49.80581963],[4.66911151,49.80563088],[4.66920862,49.80541567],[4.66930174,49.80520592],[4.66933218,49.8050752],[4.6693343,49.80497003],[4.66932917,49.80489821],[4.66930795,49.80484369],[4.66910141,49.80438642],[4.6689731,49.80411409],[4.66889561,49.80390937],[4.66884799,49.8037267],[4.66883402,49.80359659],[4.66885534,49.80344174],[4.66891417,49.80324503],[4.66906598,49.80296168],[4.66911236,49.80285142],[4.66916774,49.80276169],[4.66925874,49.80265711],[4.66946288,49.8024036],[4.66973057,49.80214023],[4.67000911,49.80191176],[4.6701058,49.80181159],[4.67016806,49.80171997],[4.67020989,49.80164032],[4.67021438,49.80160791],[4.6702215,49.80157097],[4.67028868,49.80124744],[4.67031639,49.80082111],[4.67033152,49.80060433],[4.67030468,49.79999543],[4.67025779,49.79936793],[4.67019605,49.79875321],[4.67005823,49.79797688],[4.66989633,49.79727098],[4.66984679,49.79711439],[4.6697304,49.79652648],[4.66973048,49.79644381],[4.66973873,49.79635653],[4.66974435,49.79631601],[4.66978207,49.79594076],[4.66984392,49.7956245],[4.66990731,49.79548254],[4.67001288,49.79535709],[4.67049651,49.79494877],[4.67090212,49.79461701],[4.67141323,49.79420023],[4.67189318,49.79380724],[4.67241126,49.79343439],[4.67271572,49.79323611],[4.67281941,49.79318077],[4.67324166,49.79293414],[4.67344449,49.79281184],[4.67357464,49.79271659],[4.6737235,49.79259952],[4.67387721,49.79241859],[4.67407364,49.79218584],[4.6743907,49.79165219],[4.67461139,49.79110098],[4.67480076,49.79061042],[4.67487446,49.79040272],[4.67491356,49.79024043],[4.67491472,49.79014875],[4.6748774,49.78994168],[4.6748743,49.78993184],[4.67475038,49.78958127],[4.67470189,49.78941479],[4.67467552,49.78928754],[4.6746718,49.7892166],[4.67468005,49.78912932],[4.67474672,49.78896126],[4.67480193,49.7888248],[4.6749205,49.78871534],[4.67522008,49.78841197],[4.6754985,49.78814035],[4.67553617,49.78810389],[4.67582043,49.78784117],[4.67608305,49.78759583],[4.67640346,49.78729307],[4.67665016,49.78707041],[4.67707793,49.78669788],[4.67719672,49.7865956],[4.67761418,49.78624747],[4.67795282,49.78595075]]]}', $li->eq(2)->attr('data-autocomplete-value'));
        $this->assertSame('D32', $li->eq(3)->text());
    }

    public function testBadRequest(): void
    {
        $client = $this->login();
        $client->request('GET', '/_fragment/roads_numbers-completions');
        $client->getResponse();

        $this->assertResponseStatusCodeSame(400);
    }

    public function testWithoutAuthenticatedUser(): void
    {
        $client = static::createClient();
        $client->request('GET', '/_fragment/roads_numbers-completions?search=Test&administrator=Test');
        $this->assertResponseRedirects('http://localhost/login', 302);
    }
}
