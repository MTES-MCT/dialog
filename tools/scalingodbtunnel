#!/usr/bin/env python3
import argparse
import subprocess
from urllib.parse import urlparse, urlunparse


def main(app, port):
    # 1) Forward Scalingo -> host.

    # https://doc.scalingo.com/platform/databases/access#encrypted-tunnel
    db_tunnel_command = [
        "scalingo",
        "--app",
        app,
        "db-tunnel",
        "-p",
        str(port),
        "DATABASE_URL",
    ]

    with subprocess.Popen(
        db_tunnel_command, stdout=subprocess.PIPE, stderr=subprocess.DEVNULL
    ) as db_tunnel_proc:
        db_tunnel_proc.poll()

        # 2) Forward host -> Docker.
        # This allows PHP/Doctrine container to access the Scalingo database.

        username = (
            subprocess.run(["whoami"], capture_output=True).stdout.decode().strip()
        )

        # https://stackoverflow.com/a/55224655
        docker_bridge_ip_command = [
            "docker",
            "network",
            "inspect",
            "bridge",
            "--format={{(index .IPAM.Config 0).Gateway}}",
        ]
        result = subprocess.run(docker_bridge_ip_command, capture_output=True)
        docker_bridge_ip = result.stdout.decode().strip()
        docker_tunnel_origin = f"{docker_bridge_ip}:{port}"

        # https://stackoverflow.com/a/52120176
        docker_tunnel_command = [
            "ssh",
            "-N",
            "-L",
            f"{docker_tunnel_origin}:127.0.0.1:{port}",
            f"{username}@localhost",
        ]

        with subprocess.Popen(docker_tunnel_command) as docker_tunnel_proc:
            # The tunnel database URL uses the same credentials, so we grab them
            # from the configured DATABASE_URL.
            database_url_command = ["scalingo", "--app", app, "env-get", "DATABASE_URL"]
            result = subprocess.run(database_url_command, capture_output=True)
            database_url = urlparse(result.stdout.strip().decode())

            db_tunnel_database_url = database_url._replace(
                netloc=f"{database_url.username}:{database_url.password}@{docker_tunnel_origin}"
            )

            print(f"DATABASE_URL={urlunparse(db_tunnel_database_url)}")

            try:
                db_tunnel_proc.wait()
            except KeyboardInterrupt:
                db_tunnel_proc.terminate()
                docker_tunnel_proc.terminate()


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("app", help="Name of the Scalingo application")
    parser.add_argument(
        "--port",
        type=int,
        default=10000,
        help="Port of the SSH tunnel (default: 10000)",
    )
    args = parser.parse_args()

    main(args.app, args.port)
