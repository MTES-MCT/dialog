{% set frame = measure ? "block_measure_" ~ measure.uuid : 'block_measure' %}
{% set cancelUrl = measure
    ? path('fragment_regulations_measure', {regulationOrderRecordUuid: regulationOrderRecord.uuid, uuid: measure.uuid})
    : path('fragment_regulation_measure_add_link', {regulationOrderRecordUuid: regulationOrderRecord.uuid})
%}
{% set isPermanent = regulationOrderRecord.regulationOrder.isPermanent %}

{% macro periods_list_item(form, index, isPermanent) %}
    <li
        class="app-card"
        data-controller="remove"
        data-remove-target="this"
        data-form-collection-target="collectionItem"
    >
        <div class ="app-card__header">
            <div class="app-card__title fr-text--heavy">
                {{ 'regulation.period.title'|trans }}
            </div>
            <button
                type="button"
                aria-label="{{ 'common.delete'|trans }}"
                class="fr-btn fr-btn--sm fr-btn--secondary fr-icon-delete-bin-line"
                data-action="remove#removeElement"
            >
            </button>
        </div>
        <div class="app-card__content">
            <div class="fr-x-container--fluid">
                <div class="fr-grid-row fr-grid-row--gutters">
                    {{ form_row(form.startDate, {group_class: 'fr-input-group', row_attr: {class: 'fr-col-12 fr-col-md-5'}, attr: {class: 'fr-input'}}) }}
                    {{ form_row(form.startTime, {group_class: 'fr-input-group', row_attr: {class: 'fr-col fr-mb-3w fr-col-md-6 fr-mt-1w'} }) }}
                </div>
                {% if not isPermanent %}
                    <div class="fr-grid-row fr-grid-row--gutters">
                        {{ form_row(form.endDate, {group_class: 'fr-input-group', row_attr: {class: 'fr-col-12 fr-col-md-5 '}, attr: {class: 'fr-input'}}) }}
                        {{ form_row(form.endTime, {group_class: 'fr-input-group', row_attr: {class: 'fr-col fr-mb-3w fr-col-md-6 fr-mt-1w'} }) }}
                    </div>
                {% endif %}
            </div>
            {{ form_row(form.isPermanent) }}

            <div data-controller="form-reveal">
                <hr/>
                <div class="fr-container--fluid">
                    <div class="fr-grid-row fr-grid-row--gutters">
                        <div class="fr-select-group fr-col-12">
                            {{ form_label(form.recurrenceType, null, { label_attr: { class: 'fr-label required fr-text--heavy' } }) }}
                            {{ form_widget(form.recurrenceType, {
                                group_class: 'fr-select-group',
                                widget_class: 'fr-select',
                                row_attr: {class: 'fr-col-12'},
                                attr: {
                                    'data-controller': 'condition',
                                    'data-condition-equals-value': 'certainDays',
                                    'data-action': 'change->condition#dispatchFromInputChange condition:yes->form-reveal#open   condition:no->form-reveal#close',
                                }
                            }) }}
                            {{ form_errors(form.recurrenceType) }}
                        </div>
                    </div>
                </div>

                <div data-form-reveal-target="section" {% if form.recurrenceType.vars.value != 'certainDays' %}hidden{% endif %}>
                    <div class="fr-fieldset__element fr-my-2w" >
                        {% for day in form.dailyRange.applicableDays %}
                            {% set dayBtnId = day.vars.id ~ '-btn' %}
                            {% set isChecked = day.vars.value in form.dailyRange.applicableDays.vars.value ? "true" : "false" %}
                            <label for="{{ dayBtnId }}" data-controller="chip-button">
                                <button
                                    id="{{ dayBtnId }}"
                                    type="button"
                                    class="fr-tag fr-mb-1w"
                                    aria-pressed="{{ isChecked }}"
                                    data-chip-button-target="button"
                                >
                                    {{ ('regulation.period.days.' ~ day.vars.value)|trans }}
                                    {{ form_widget(day, { attr: { hidden: true, 'data-chip-button-target': 'checkbox' } }) }}
                                </button>
                            </label>
                        {% endfor %}
                    </div>
                    {{ form_row(form.dailyRange.recurrenceType) }}
                    {{ form_errors(form.dailyRange.applicableDays) }}
                </div>
                <div
                    data-controller="form-collection"
                    data-form-collection-prototype-key-value="timeSlot"
                    data-form-collection-next-index-value="{{ form.timeSlots|length > 0 ? form.timeSlots|last.vars.name + 1 : 0 }}"
                    data-form-collection-prototype-value="{{ _self.timeSlots_list_item(form.timeSlots.vars.prototype, '__timeSlot_name__')|e('html_attr') }}"
                >
                    <ul
                        class="app-timeslot-list fr-raw-list fr-mb-2w"
                        data-testid="timeslot-list"
                        data-form-collection-target="collectionContainer"
                        {% if form.timeSlots|length == 0 %}data-empty{% endif %}
                        aria-label="{{ form.timeSlots.vars.label|trans }}"
                    >
                        {%- for item in form.timeSlots -%}
                            {{ _self.timeSlots_list_item(item, loop.index) }}
                        {%- else -%}
                            {%- do form.timeSlots.setRendered -%}
                        {%- endfor -%}
                    </ul>

                    <button
                        type="button"
                        class="app-timeslot-define fr-btn fr-btn--tertiary-no-outline fr-btn--icon-left fr-icon-time-line fr-x-btn--with-hint"
                        data-action="form-collection#addCollectionElement"
                    >
                        {{ 'regulation.timeSlot.add'|trans }}

                        <span class="fr-hint-text">{{ 'regulation.timeSlot.add.help'|trans }}</span>
                    </button>
                </div>
            </div>
        </div>
    </li>
{% endmacro %}

{% macro timeSlots_list_item(form, index) %}
    <li
        data-controller="remove"
        data-remove-target="this"
        data-form-collection-target="collectionItem"
    >
        <div class="fr-container--fluid">
            <div class="fr-grid-row fr-grid-row--gutters">
                {{ form_row(form.startTime, {group_class: 'fr-input-group', row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-input'}}) }}
                {{ form_row(form.endTime, {group_class: 'fr-input-group', row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-input'}}) }}
                <div class="fr-col-12 fr-col-sm-4">
                    <button
                        type="button"
                        class="fr-btn fr-btn--sm fr-btn--secondary fr-icon-delete-bin-line fr-mt-5w"
                        data-action="remove#removeElement"
                        aria-label="{{ 'regulation.timeSlots.remove'|trans }}"
                    >
                    </button>
                    <button
                        type="button"
                        class="app-timeslot-list-add fr-btn fr-btn--sm fr-btn--secondary fr-icon-add-line fr-mt-5w"
                        data-action="form-collection#addCollectionElement"
                        aria-controls="period-list"
                        aria-label="{{ 'regulation.timeSlots.add'|trans }}"
                    >
                    </button>
                </div>
            </div>
        </div>
    </li>
{% endmacro %}

{% macro locations_list_item(form, index) %}
    <li
        class="app-card app-card--no-header"
        data-controller="remove"
        data-remove-target="this"
        data-form-collection-target="collectionItem"
    >
        <div class="app-card__actions">
            <button
                type="button"
                aria-label="{{ 'common.delete'|trans }}"
                class="fr-btn fr-btn--sm fr-btn--secondary fr-icon-delete-bin-line"
                data-action="remove#removeElement"
            >
            </button>
        </div>
        <div class="app-card__content">
            <div
                data-controller="form-reveal"
                class="fr-x-autocomplete-wrapper"
                data-autocomplete-url-value="{{ path('fragment_city_completion') }}"
                data-autocomplete-query-param-value="search"
                data-autocomplete-min-length-value="3"
                data-autocomplete-delay-value="500"
            >
                {{ form_row(form.roadType, {
                    group_class: 'fr-select-group',
                    widget_class: 'fr-select',
                    row_attr: {
                        'data-action':
                        'change->form-reveal#openByValue'
                    },
                }) }}

            <div
                data-form-reveal-target="section"
                data-value="departmentalRoad"
                {% if form.roadType.vars.value != 'departmentalRoad'%} hidden {% endif%}
            >
                {{ form_row(form.administrator, {
                    group_class: 'fr-input-group',
                    widget_class: 'fr-input',
                }) }}
                <ul
                    id="{{ form.administrator.vars.id }}-results"
                    role="listbox"
                    aria-label="{{ 'regulation.location.city.results_label'|trans }}"
                    class="fr-x-autocomplete"
                    data-autocomplete-target="results"
                ></ul>
                <div
                    class="fr-x-autocomplete-wrapper"
                    data-controller="autocomplete"
                    data-autocomplete-url-value="{{ path('fragment_road_number_completion') }}" data-autocomplete-query-param-value="search"
                    data-autocomplete-extra-query-params-value="{{ {administrator: '#' ~ form.administrator.vars.id}|json_encode }}"
                    data-autocomplete-min-length-value="2"
                    data-autocomplete-delay-value="500"
                >
                    {{ form_row(form.roadNumber, {
                        group_class: 'fr-input-group',
                        widget_class: 'fr-input',
                        attr: {
                            'data-autocomplete-target': 'input',
                        },
                    }) }}
                        <ul
                            id="{{ form.roadNumber.vars.id }}-results"
                            role="listbox"
                            aria-label="{{ 'regulation.location.roadNumber.results_label'|trans }}"
                            class="fr-x-autocomplete"
                            data-autocomplete-target="results">
                        </ul>
                    {{ form_row(form.fullDepartmentalRoadGeometry, { attr: {'data-autocomplete-target': 'hidden'} }) }}
                    {{ form_errors(form.fullDepartmentalRoadGeometry) }}
                </div>

                <fieldset
                    aria-labelledby="regulation-location-reference-point"
                >
                    <legend id="regulation-location-{{ index }}-reference-point-a-legend" class="required">
                        <span class="fr-x-label-content">{{ 'regulation.location.referencePoint'|trans }}</span>
                    </legend>
                    <div class="fr-hint-text help-text">{{ 'regulation.location.referencePoint.help'|trans }}</div>
                    <fieldset
                        class="fr-mt-2w"
                        aria-labelledby="regulation-location-{{ index }}-reference-point-a-legend"
                    >
                        <legend id="regulation-location-{{ index }}-reference-point-a-legend">
                            {{ 'regulation.location.referencePoint.from'|trans }}
                        </legend>
                        <div class="fr-grid-row fr-grid-row--gutters">
                            {{ form_row(form.fromPointNumber, { row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-input'}}) }}
                            {{ form_row(form.fromSide, { row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-select'}}) }}
                            {{ form_row(form.fromAbscissa, { row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-input'}}) }}
                        </div>
                    </fieldset>
                    <fieldset
                        class="fr-mt-2w fr-mb-2w"
                        aria-labelledby="regulation-location-{{ index }}-reference-point-b-legend"
                    >
                        <legend id="regulation-location-{{ index }}-reference-point-a-legend">
                            {{ 'regulation.location.referencePoint.to'|trans }}
                        </legend>
                        <div class="fr-grid-row fr-grid-row--gutters">
                            {{ form_row(form.toPointNumber, { row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-input'}}) }}
                            {{ form_row(form.toSide, { row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-select'}}) }}
                            {{ form_row(form.toAbscissa, { row_attr: {class:'fr-col-12 fr-col-sm-4'}, attr: {class: 'fr-input'}}) }}
                        </div>
                    </fieldset>
                </fieldset>
            </div>
            <div
                data-form-reveal-target="section"
                data-value="lane"
                {% if form.roadType.vars.value != 'lane'%} hidden {% endif%}
            >
                <div
                    class="fr-x-autocomplete-wrapper"
                    data-controller="autocomplete"
                    data-autocomplete-url-value="{{ path('fragment_city_completion') }}"
                    data-autocomplete-query-param-value="search"
                    data-autocomplete-min-length-value="3"
                    data-autocomplete-delay-value="500"
                >
                    {{ form_row(form.cityCode, { attr: {'data-autocomplete-target': 'hidden'} }) }}

                    {{ form_row(form.cityLabel, {
                        group_class: 'fr-input-group',
                        widget_class: 'fr-input',
                        attr: {
                            'data-autocomplete-target': 'input',
                        },
                    }) }}
                    <ul
                        id="{{ form.cityLabel.vars.id }}-results"
                        role="listbox"
                        aria-label="{{ 'regulation.location.city.results_label'|trans }}"
                        class="fr-x-autocomplete"
                        data-autocomplete-target="results"
                    ></ul>
                </div>
                <div
                    class="fr-x-autocomplete-wrapper"
                    data-controller="autocomplete"
                    data-autocomplete-url-value="{{ path('fragment_roadName_completion') }}"
                    data-autocomplete-query-param-value="search"
                    data-autocomplete-extra-query-params-value="{{ {cityCode: '#' ~ form.cityCode.vars.id}|json_encode }}"
                    data-autocomplete-min-length-value="3" data-autocomplete-delay-value="500"
                >
                    {{ form_row(form.roadName, {
                        group_class: 'fr-input-group',
                        widget_class: 'fr-input',
                        attr: {
                            'data-autocomplete-target': 'input',
                        },
                    }) }}
                    <ul
                        id="{{ form.roadName.vars.id }}-results"
                        role="listbox"
                        aria-label="{{ 'regulation.location.roadName.results_label'|trans }}"
                        class="fr-x-autocomplete"
                        data-autocomplete-target="results"
                    ></ul>
                </div>

                <div data-controller="form-reveal">
                    {{ form_row(form.isEntireStreet, {
                        group_class: 'fr-checkbox-group',
                        attr: {
                            'data-controller': 'condition',
                            'data-condition-equals-value': true,
                            'data-action': 'change->condition#dispatchFromCheckboxChange condition:yes->form-reveal#close condition:no->form-reveal#open'
                        }
                    }) }}

                    {% set hasHouseNumbersErrors = form.isEntireStreet.vars.errors|filter(e => app_is_fieldset_error(e, 'houseNumbers'))|length > 0 %}

                    <fieldset
                        class="fr-fieldset {% if hasHouseNumbersErrors %}fr-fieldset--error{% endif %} fr-mt-3w fr-mb-0"
                        aria-labelledby="{{ form.isEntireStreet.vars.id }}-houseNumbers-legend"
                        data-form-reveal-target="section"
                        {% if form.isEntireStreet.vars.checked %}hidden{% endif %}
                    >
                        <legend id="{{ form.isEntireStreet.vars.id }}-houseNumbers-legend" class="app-sr-only">
                            {{ 'regulation.location.houseNumbers.legend'|trans }}
                        </legend>
                        <div class="fr-fieldset__element fr-grid-row fr-grid-row--gutters fr-mb-0">
                            {{ form_row(form.fromHouseNumber, {group_class: 'fr-input-group', widget_class: 'fr-input', row_attr: {class: 'fr-col-12 fr-col-sm-6 fr-col-md-5 fr-col-lg-3 fr-mb-0'}}) }}
                            {{ form_row(form.toHouseNumber, {group_class: 'fr-input-group', widget_class: 'fr-input', row_attr: {class: 'fr-col-12 fr-col-sm-6 fr-col-md-5 fr-col-lg-3'}}) }}
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </li>
{% endmacro %}

<turbo-frame id="{{ frame }}">
    <div class="app-card app-card--raised app-card--with-full-background fr-mt-3w" data-testid="measure">
        <div class="app-card__header">
            <h3 class="app-card__title fr-h4 fr-mb-0">
                {{ 'regulation.measure.card.title'|trans }}
            </h3>
        </div>
        <div
            class="app-card__content"
            style="--card-padding: 0.5rem 1.5rem 1.5rem 1.5rem"
        >
            <p>{{ 'regulation.measure.card.description'|trans }}</p>
            {{ form_start(form, {attr: {id: 'measure-form'}}) }}
                <div class="app-card">
                    <div class="app-card__header">
                        <span class="app-card__img fr-icon-x-restriction fr-x-icon--primary fr-x-icon--xl" aria-hidden="true"></span>
                        <h3 class="app-card__title fr-h4 fr-mb-0">
                            {% if measure %}
                                {% if measure.type == 'speedLimitation' %}
                                    {{ 'regulation.measure.maxSpeed'|trans({ '%maxSpeed%': measure.maxSpeed }) }}
                                {% else %}
                                    {{ ('regulation.measure.type.' ~ measure.type)|trans }}
                                {% endif %}
                            {% else %}
                                {{ 'regulation.measure'|trans}}
                            {% endif %}
                        </h3>
                    </div>
                    <div
                        class="app-card__content"
                        style="--card-padding: 1.5rem"
                    >
                        {{ form_errors(form) }}

                        <div data-controller="form-reveal">
                            {{ form_row(form.type, {
                                group_class: 'fr-select-group',
                                widget_class: 'fr-select',
                                row_attr: {
                                    'data-controller': 'condition',
                                    'data-condition-equals-value': 'speedLimitation',
                                    'data-action':
                                    'change->condition#dispatchFromInputChange condition:yes->form-reveal#open condition:no->form-reveal#close',
                                },
                            }) }}

                            {{ form_row(form.maxSpeed, {
                                group_class: 'fr-input-group',
                                widget_class: 'fr-input',
                                row_attr: {
                                    'data-form-reveal-target': 'section',
                                    hidden: form.type.vars.value != 'speedLimitation',
                                    'class': 'fr-pb-3w',
                                },
                                attr: {
                                    'class': 'fr-x-max-w-32w fr-mt-1w',
                                    'data-form-reveal-target': 'form-control',
                                },
                                widget_suffix: 'regulation.measure.maxSpeed.unit'|trans
                            }) }}
                        </div>

                        {% include 'regulation/_vehicle_set_form.html.twig' with { form: form.vehicleSet, index: 0 } only %}

                        <div
                            data-controller="form-collection"
                            data-form-collection-prototype-key-value="period"
                            data-form-collection-next-index-value="{{ form.periods|length > 0 ? form.periods|last.vars.name + 1 : 0 }}"
                            data-form-collection-prototype-value="{{ _self.periods_list_item(form.periods.vars.prototype, '__period_name__', isPermanent)|e('html_attr') }}"
                        >
                            <fieldset
                                class="fr-fieldset"
                                aria-labelledby="periods-legend"
                                >
                                {{ form_label(form.periods, null, { element: 'legend', required: false, label_attr: { id: 'periods-legend', class: 'fr-fieldset__legend' } }) }}
                                <ul
                                    id="period-list"
                                    class="fr-raw-list"
                                    data-testid="period-list"
                                    data-form-collection-target="collectionContainer"
                                    aria-label="{{ form.periods.vars.label|trans }}"
                                >
                                    {% for item in form.periods %}
                                        {{ _self.periods_list_item(item, loop.index, isPermanent) }}
                                    {% else %}
                                        {% do form.periods.setRendered %}
                                    {% endfor %}
                                </ul>
                            </fieldset>
                            <button
                                type="button"
                                class="fr-btn fr-btn--tertiary-no-outline fr-btn--icon-left fr-icon-calendar-line"
                                data-action="form-collection#addCollectionElement"
                                aria-controls="period-list"
                            >
                                {{ 'regulation.period.add'|trans }}
                            </button>
                        </div>
                    </div>
                </div>
                <div class="app-card fr-mt-3w">
                    <div class="app-card__header">
                        <span class="app-card__img fr-icon-map-pin-2-line fr-x-icon--primary fr-x-icon--xl" aria-hidden="true"></span>
                        <div class="app-card__title">
                            <h3 class="fr-h4 fr-mb-0">
                                {{ 'regulation.locations'|trans }}
                            </h3>
                            <p class="fr-x-text--mention-grey fr-mb-0">
                                {{ 'regulation.locations.description'|trans }}
                            </p>
                        </div>
                    </div>
                    <div
                        class="app-card__content"
                        style="--card-padding: 1.5rem"
                    >
                        <div
                            data-controller="form-collection"
                            data-form-collection-prototype-key-value="location"
                            data-form-collection-next-index-value="{{ form.locations|length > 0 ? form.locations|last.vars.name + 1 : 0 }}"
                            data-form-collection-prototype-value="{{ _self.locations_list_item(form.locations.vars.prototype, '__location_name__', '__location_position__')|e('html_attr') }}"
                            class="fr-mb-4w"
                        >
                            <ul
                                class="fr-raw-list fr-mb-2w d-stack"
                                style="--stack-gap: var(--2w)"
                                data-form-collection-target="collectionContainer"
                                data-action="remove:child-removed->form-collection#syncPositions"
                                aria-label="{{ form.locations.vars.label|trans }}"
                            >
                                {% for item in form.locations %}
                                    {{ _self.locations_list_item(item, loop.index0, loop.index) }}
                                {% else %}
                                    {% do form.locations.setRendered %}
                                {% endfor %}
                            </ul>

                            <button
                                type="button"
                                class="fr-btn fr-btn--tertiary-no-outline fr-btn--icon-left fr-icon-map-pin-2-line"
                                data-action="form-collection#addCollectionElement"
                            >
                                {{ 'regulation.location.add'|trans }}
                            </button>
                            {{ form_errors(form.locations) }}
                        </div>
                    </div>
                </div>
                <ul class="fr-btns-group fr-btns-group--inline fr-mt-3w">
                    <li>
                        <a href="{{ cancelUrl }}" role="button" class="fr-btn fr-btn--tertiary">
                            {{ "common.cancel"|trans }}
                        </a>
                    </li>
                    <li>
                        {{ form_widget(form.save, {attr: {class: 'fr-btn fr-btn-load', form: 'measure-form'}}) }}
                    </li>
                </ul>
            {{ form_end(form) }}
        </div>
    </div>
</turbo-frame>
