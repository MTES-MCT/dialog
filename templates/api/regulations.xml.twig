<?xml version="1.0" encoding="UTF-8"?>

<d2:payload
  modelBaseVersion="3"
  lang="FR"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:d2="http://datex2.eu/schema/3/d2Payload"
  xmlns:com="http://datex2.eu/schema/3/common"
  xmlns:comx="http://datex2.eu/schema/3/commonExtension"
  xmlns:loc="http://datex2.eu/schema/3/locationReferencing"
  xmlns="http://datex2.eu/schema/3/trafficRegulation"
  xsi:schemaLocation="http://datex2.eu/schema/3/d2Payload DATEXII_3_D2Payload.xsd"
  xsi:type="TrafficRegulationPublication"
  id="910928b3-58a1-4462-881b-53dec84602f9"
>
    <com:publicationTime>2022-11-10T15:11:00.000Z</com:publicationTime>
    <com:publicationCreator>
        <com:country>fr</com:country>
        <com:nationalIdentifier>DiaLog</com:nationalIdentifier>
    </com:publicationCreator>

    <trafficRegulationsFromCompetentAuthorities>
        {% include "api/_regulations_raw.xml.twig" %}

        {% for regulationOrder in regulationOrders %}
            {% set startDate = regulationOrder.startDate %}
            {% set endDate = regulationOrder.endDate %}
            <trafficRegulationOrder id="{{ regulationOrder.uuid }}" version="1">
                <description>
                    <com:values>
                        <com:value>{{ regulationOrder.description }}</com:value>
                    </com:values>
                </description>
                <issuingAuthority>
                    <com:values>
                        <com:value>{{ regulationOrder.organization }}</com:value>
                    </com:values>
                </issuingAuthority>
                <regulationId>{{ regulationOrder.uuid }}</regulationId>
                <status>madeAndImplemented</status>

                {% for trafficRegulation in regulationOrder.trafficRegulations %}
                    {% set location = trafficRegulation.location %}
                    {% set vehicleConditions = trafficRegulation.vehicleConditions %}
                    <trafficRegulation>
                        <status>active</status>
                        <typeOfRegulation xsi:type="AccessRestriction">
                            <accessRestrictionType>noEntry</accessRestrictionType>
                        </typeOfRegulation>
                        <condition xsi:type="ConditionSet">
                            <operator>and</operator>
                            <conditions xsi:type="ValidityCondition">
                                <negate>false</negate>
                                <validityByOrder>
                                    <com:validityStatus>definedByValidityTimeSpec</com:validityStatus>
                                    <com:validityTimeSpecification>
                                        <com:overallStartTime>{{ startDate|date('Y-m-d') }}T00:00:00.000Z</com:overallStartTime>
                                        {% if endDate %}
                                            <com:overallEndTime>{{ endDate|date('Y-m-d') }}T23:59:59.000Z</com:overallEndTime>
                                        {% endif %}
                                    </com:validityTimeSpecification>
                                </validityByOrder>
                            </conditions>
                            <conditions xsi:type="LocationCondition">
                                <locationByOrder xsi:type="loc:SingleRoadLinearLocation">
                                    <loc:linearWithinLinearElement>
                                        <loc:directionRelativeOnLinearSection>both</loc:directionRelativeOnLinearSection>
                                        <loc:heightGradeOfLinearSection>atGrade</loc:heightGradeOfLinearSection>
                                        <loc:linearElement xsi:type="loc:LinearElement">
                                            <loc:roadName>
                                                <com:values>
                                                    <com:value lang="fr">{{ location.address }}</com:value>
                                                </com:values>
                                            </loc:roadName>
                                        </loc:linearElement>

                                        {% if location.fromLatitude and location.fromLongitude %}
                                            <loc:fromPoint xsi:type="loc:DistanceFromLinearElementReferent">
                                                <loc:distanceAlong>0</loc:distanceAlong>
                                                <loc:fromReferent>
                                                    <loc:referentIdentifier>start</loc:referentIdentifier>
                                                    <loc:referentName>{{ location.fromHouseNumber ?? 'start' }}</loc:referentName>
                                                    <loc:referentType>referenceMarker</loc:referentType>
                                                    <loc:pointCoordinates>
                                                        <loc:latitude>{{ location.fromLatitude }}</loc:latitude>
                                                        <loc:longitude>{{ location.fromLongitude }}</loc:longitude>
                                                    </loc:pointCoordinates>
                                                </loc:fromReferent>
                                            </loc:fromPoint>
                                        {% else %}
                                            <loc:fromPoint xsi:type="loc:PercentageDistanceAlongLinearElement">
                                                <loc:percentageDistanceAlong>0</loc:percentageDistanceAlong>
                                            </loc:fromPoint>
                                        {% endif %}

                                        {% if location.toLatitude and location.toLongitude %}
                                            <loc:toPoint xsi:type="loc:DistanceFromLinearElementReferent">
                                                <loc:distanceAlong>0</loc:distanceAlong>
                                                <loc:fromReferent>
                                                    <loc:referentIdentifier>end</loc:referentIdentifier>
                                                    <loc:referentName>{{ location.toHouseNumber ?? 'end' }}</loc:referentName>
                                                    <loc:referentType>referenceMarker</loc:referentType>
                                                    <loc:pointCoordinates>
                                                        <loc:latitude>{{ location.toLatitude }}</loc:latitude>
                                                        <loc:longitude>{{ location.toLongitude }}</loc:longitude>
                                                    </loc:pointCoordinates>
                                                </loc:fromReferent>
                                            </loc:toPoint>
                                        {% else %}
                                            <loc:toPoint xsi:type="loc:PercentageDistanceAlongLinearElement">
                                                <loc:percentageDistanceAlong>100</loc:percentageDistanceAlong>
                                            </loc:toPoint>
                                        {% endif %}
                                    </loc:linearWithinLinearElement>
                                </locationByOrder>
                            </conditions>
                            {% for vehicle in vehicleConditions|filter(v => not v.isOther) %}
                                {% if vehicle.nonVehicularRoadUser %}
                                    <conditions xsi:type="NonVehicularRoadUserCondition">
                                        <negate>{{ vehicle.isExempted ? 'true' : 'false' }}</negate>
                                        <nonVehicularRoadUser>{{ vehicle.nonVehicularRoadUser }}</nonVehicularRoadUser>
                                    </conditions>
                                {% else %}
                                    <conditions xsi:type="VehicleCondition">
                                        <negate>{{ vehicle.isExempted ? 'true' : 'false' }}</negate>
                                        <vehicleCharacteristics>
                                            {% if vehicle.euSpecialPurposeVehicle %}
                                                <com:_vehicleCharacteristicsExtension>
                                                    <com:vehicleCharacteristicsExtended>
                                                        <comx:regulatedCharacteristics>
                                                            <comx:euSpecialPurposeVehicle>{{ vehicle.euSpecialPurposeVehicle }}</comx:euSpecialPurposeVehicle>
                                                        </comx:regulatedCharacteristics>
                                                    </com:vehicleCharacteristicsExtended>
                                                </com:_vehicleCharacteristicsExtension>
                                            {% elseif vehicle.emissionClassificationOther %}
                                                <com:emissions>
                                                    <com:emissionClassificationOther>{{ vehicle.emissionClassificationOther }}</com:emissionClassificationOther>
                                                </com:emissions>
                                            {% else %}
                                                <com:vehicleType>{{ vehicle.type }}</com:vehicleType>
                                                {% if vehicle.type == 'heavyGoodsVehicle' %}
                                                    {% if vehicle.maxWeight %}
                                                        <com:grossWeightCharacteristic>
                                                            <com:comparisonOperator>lessThanOrEqualTo</com:comparisonOperator>
                                                            <com:grossVehicleWeight>{{ vehicle.maxWeight }}</com:grossVehicleWeight>
                                                            <com:typeOfWeight>maximumPermitted</com:typeOfWeight>
                                                        </com:grossWeightCharacteristic>
                                                    {% endif %}
                                                    {% if vehicle.maxHeight %}
                                                        <com:heightCharacteristic>
                                                            <com:comparisonOperator>lessThanOrEqualTo</com:comparisonOperator>
                                                            <com:vehicleHeight>{{ vehicle.maxHeight }}</com:vehicleHeight>
                                                        </com:heightCharacteristic>
                                                    {% endif %}
                                                    {% if vehicle.maxLength %}
                                                        <com:lengthCharacteristic>
                                                            <com:comparisonOperator>lessThanOrEqualTo</com:comparisonOperator>
                                                            <com:vehicleLength>{{ vehicle.maxLength }}</com:vehicleLength>
                                                        </com:lengthCharacteristic>
                                                    {% endif %}
                                                    {% if vehicle.maxWidth %}
                                                        <com:widthCharacteristic>
                                                            <com:comparisonOperator>lessThanOrEqualTo</com:comparisonOperator>
                                                            <com:vehicleWidth>{{ vehicle.maxWidth }}</com:vehicleWidth>
                                                        </com:widthCharacteristic>
                                                    {% endif %}
                                                {% endif %}
                                            {% endif %}
                                        </vehicleCharacteristics>
                                    </conditions>
                                {% endif %}
                            {% endfor %}
                        </condition>
                    </trafficRegulation>
                {% endfor %}
            </trafficRegulationOrder>
        {% endfor %}
    </trafficRegulationsFromCompetentAuthorities>
</d2:payload>
