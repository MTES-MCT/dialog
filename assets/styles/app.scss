@import url('../../node_modules/@gouvfr/dsfr/dist/dsfr.min.css');
@import url('../../node_modules/@gouvfr/dsfr/dist/utility/icons/icons-document/icons-document.min.css');
@import url('../../node_modules/@gouvfr/dsfr/dist/utility/icons/icons-design/icons-design.min.css');
@import url('../../node_modules/@gouvfr/dsfr/dist/utility/icons/icons-system/icons-system.min.css');
@import url('../../node_modules/@gouvfr/dsfr/dist/utility/icons/icons-user/icons-user.min.css');
@import url('../../node_modules/@gouvfr/dsfr/dist/utility/icons/icons-business/icons-business.min.css');
@import url('../../node_modules/@gouvfr/dsfr/dist/utility/icons/icons-map/icons-map.min.css');
@import url('../../node_modules/remixicon/fonts/remixicon.css');

/* .required is set by Symfony for form types with 'required => true' */
label.required > .fr-x-label-content::after, legend.required > .fr-x-label-content::after {
    content: ' *';
}

@supports not selector(::-webkit-calendar-picker-indicator) {
    // Partial FIX for: https://github.com/GouvernementFR/dsfr/issues/411
    // Hide duplicate calendar icon and restore padding when DSFR fails to hide the native calendar icon
    .fr-input-wrap.fr-fi-calendar-line::before {
        display: none;
    }
    .fr-input-wrap .fr-input[type=date] {
        padding-right: 1rem;
    }
}

[hidden] {
    // Ensure elements with a non-block or non-inline 'display' (such as DSFR buttons with become, or an element with display: grid) effectively become hidden when the 'hidden' HTML attribute is set.
    display: none !important;
}

:root {
    --x-icon-decorative-blue-france: #CACAFB;
}

.fr-background-alt--grey {
    background-color: var(--background-alt-grey);
}

.fr-x-icon-decorative--blue-france::before {
    background-color: var(--x-icon-decorative-blue-france);
}

.fr-x-icon--xl::before {
    --icon-size: 2.75rem;
}

.fr-x-text--right {
    text-align: right;
}

.fr-x-text--center {
  text-align: center;
}

.fr-x-container--fluid {
    max-width: none;
    padding-left: 0;
    padding-right: 0;
    // No 'overflow: hidden' (contrary to '.fr-container--fluid')
}

.fr-x-hidden-sm {
    @media screen and (min-width: 36em) {
        display: none !important;
    }
}

.fr-x-revert-sm {
    @media screen and (min-width: 36em) {
        display: revert !important;
    }
}

.fr-x-fieldset--raw {
    border: 0;
    padding: 0;
    margin: 0;
}

@each $extraIcon in ('bus', 'ambulance', 'bicycle', 'pedestrians', 'critair', 'heavy-goods-vehicle') {
    .fr-icon-x-#{$extraIcon}::before {
        mask-image: url('../../public/images/icons/#{$extraIcon}.svg');
        -webkit-mask-image: url('../../public/images/icons/#{$extraIcon}.svg');
    }
}

.fr-x-text--italic {
    font-style: italic;
}

.fr-x-text--regular {
    // Higher priority than .fr-text--regular provided by DSFR, so it can work
    // with DSFR classes declared after .fr-text--regular, such as .fr-h4.
    font-weight: 400 !important;
}

.remixicons {
    font-size: 1.5rem !important; // Override to have the same size as the DSFR. Don't work without !important
}

.fr-x-text--default-grey {
    color: var(--text-default-grey);
}

.fr-x-text--mention-grey {
    color: var(--text-mention-grey);
}

.fr-x-text--blue-france {
    color: var(--blue-france-sun-113-625);
}

.fr-x-background-alt--blue-france {
    background-color: var(--background-alt-blue-france);
}

.fr-x-autocomplete-wrapper {
    position: relative;

    ul[role="listbox"] {
        border: 1px solid var(--background-contrast-grey-active);
        list-style-type: none;
        margin: 0;
        max-height: 220px;
        overflow-y: auto;
        padding: 0;
        top: 100%;
        width: 100%;
        z-index: 3;
        position: absolute;

        li[role="option"] {
            border-bottom: 1px solid var(--background-contrast-grey-active);
            padding: 10px;
            cursor: pointer;
            background: var(--background-default-grey);
        }

        li[role="option"]:hover, li[role="option"].active {
            background-color: var(--background-contrast-grey);
        }
    }
}

.fr-x-btn-sm--icon-left {
    @media screen and (min-width: 36em) {
        max-width: initial !important;
    }
}

.fr-x-btn--with-hint {
    display: grid;
    grid-template-areas: "icon label" "icon help";
    text-align: left;
}

.fr-x-btn--with-hint::before {
    grid-area: icon;
}

.fr-x-btn--with-hint:nth-child(0) {
    grid-area: label;
}

.fr-x-btn--with-hint:nth-child(1) {
    grid-area: help;
}

ul.fr-x-list--checkmarks > li {
    padding-inline-start: var(--ul-start);
}

ul.fr-x-list--checkmarks > li::marker {
    content: url('../../public/images/icons/checkmark.svg');
    color: var(--blue-france-sun-113-625);
}

@media screen and (min-width: 48em) {
    .fr-x-md-stack > * + * {
        padding-block-start: var(--stack-spacing, 1.5rem);
    }
}

.fr-x-max-w-32w {
    max-width: calc(32 * 0.5rem);
}

.app-widget--suffix {
    display: flex;
    align-items: flex-end;
    column-gap: 0.5rem;
}

.app-regulation-table {
    // Take minimum amount of space on all screen sizes
    .app-regulation-table__identifier {
        width: 25%;
        @media screen and (min-width: 36em) {
            width: 15%;
        }
        @media screen and (min-width: 62em) {
            width: 10%;
        }
    }
    .app-regulation-table__actions {
        width: 25%;
        @media screen and (min-width: 36em) {
            width: 15%;
        }
        @media screen and (min-width: 48em) {
            width: 20%;
        }
    }
}

.app-box {
    padding: 2rem;
    background-color: var(--background-raised-grey);
    border: 1px solid var(--border-default-grey);
}

.app-card {
    padding: 1.5rem;
    background-color: var(--background-raised-grey);
    border: 1px solid var(--border-default-grey);
    display: grid;
    grid-template-areas: "header"
                         "content"
                         "actions";
    column-gap: 1.5rem;
    row-gap: 1rem;

    @media screen and (min-width: 992px) {
        grid-template-areas:
            "header actions"
            "content content";
        grid-template-rows: auto auto;
        grid-template-columns: 1fr auto;
    }
}

.app-card--content-only {
    grid-template-areas: "content";

    @media screen and (min-width: 992px) {
        grid-template-areas: "content";
        grid-template-rows: auto;
        grid-template-columns: 1fr;
    }
}

.app-card--no-header {
    grid-template-areas: "content"
                         "actions";

    @media screen and (min-width: 992px) {
        grid-template-areas: "content actions";
        grid-template-rows: auto;
    }
}

li.app-card + li.app-card {
    border-top: none;
}

.app-card--raised {
    filter: drop-shadow(var(--raised-shadow));
    z-index: calc(var(--ground) + 500);
    border: none;
}

.app-card__header {
    grid-area: header;
    display: flex;
    align-items: center;
    column-gap: 1rem;
}
.app-card__img {
    flex: 0;
}
.app-card__title {
    flex: 1;
}
.app-card__content {
    grid-area: content;
    flex: 1;
}
.app-card__actions {
    padding: 0;
    margin: 0;
    list-style-type: none;
    display: flex;
    column-gap: 1rem;
    grid-area: actions;
    height: fit-content;
}

.app-background--alt-grey {
    background-color: var(--background-alt-grey);
}

.app-vehicle-image {
    position: relative;
    display: grid !important;
    place-content: center;
}

.app-vehicle-image__close {
    position: absolute;
    top: calc(50% - 25px);
    right: calc(50% - 25px);
}

.app-someVehicles__radiogroup > input[type="radio"]:checked + label {
    // DSFR uses a background-image trick to place borders AND the custom checkbox.
    // Copy DSFR default and tweak it to use a grey bottom border.
    background-image:
        linear-gradient(0deg, var(--background-action-high-blue-france), var(--background-action-high-blue-france)), // border-top
        linear-gradient(0deg, var(--background-action-high-blue-france), var(--background-action-high-blue-france)), // border-right
        linear-gradient(0deg, var(--border-default-grey), var(--border-default-grey)), // border-bottom -> We make it grey
        linear-gradient(0deg, var(--background-action-high-blue-france), var(--background-action-high-blue-france)), // border-left
        radial-gradient(transparent 6px, var(--background-action-high-blue-france) 7px, transparent 8px), // Checkbox contour
        radial-gradient(var(--background-action-high-blue-france) 3px, transparent 4px); // Checkbox dot
}

.app-someVehicles__radiogroup > input[type="radio"]:checked ~ .fr-radio-rich__pictogram {
    // DSFR uses a background-image trick to place borders.
    // We want to use grey left and bottom borders. Drop the default and place actual borders ourselves.
    background-image: none;
    border-top: 1px solid var(--border-action-high-blue-france);
    border-right: 1px solid var(--border-action-high-blue-france);
    border-bottom: 1px solid var(--border-default-grey);
    border-left: 1px solid var(--border-default-grey);
}

.app-someVehicles__form {
    border: 1px solid var(--border-action-high-blue-france);
    border-top: none;
}

ol.app-authorities__steplist {
    counter-reset: li-steps;
    padding: 0;
    padding-inline-start: 5rem;

    & > li {
        position: relative;

        & + li {
            margin-block-start: 2rem;
        }
    }

    & > li::marker {
        content: none;
    }

    & > li::before {
        counter-increment: li-steps;
        content: counter(li-steps) '.';
        position: absolute;
        top: calc(50% - 1rem);
        right: calc(100% + 1rem);
        font-size: 3.5rem;
        font-weight: 700;
        color: var(--artwork-minor-blue-france);
    }
}

.app-authorities__pilotgrid {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;

    & > * {
        // Estimated to be just below 1/4th of the row width on desktop.
        width: 30ch;
    }

    figure {
        margin: 0;
    
        img {
            inline-size: 100%;
        }

        figcaption {
            text-align: right;
            font-size: 0.875rem;
            color: var(--text-mention-grey);
        }
    }
}

ul.app-landing-diagram {
    --item-padding: 0.25rem 1rem 1rem 1rem;
    --arrow-size: 14px;
    --image-size: 80px;

    list-style-type: none;
    padding: 0;
    margin: 0;
    margin-inline: auto;
    display: flex;
    flex-direction: column;
    width: fit-content;
}

ul.app-landing-diagram .spotlight {
    background-color: var(--background-alt-blue-france);
}

ul.app-landing-diagram > li {
    padding: var(--item-padding);
    text-align: center;
    font-size: 1.25rem; // xl
    font-weight: bold;
    color: var(--text-title-blue-france);
    white-space: nowrap;
}

ul.app-landing-diagram > li > img {
    width: var(--image-size);
    height: auto;
}

.app-landing-diagram__arrow {
    // Arrow container
    flex-grow: 1;
    width: 100%;
    height: 3rem;
    position: relative;
    border-width: 0.5rem 0;
    border-style: solid;
    border-color: transparent;
}

.app-landing-diagram__arrow::before {
    // Arrow line
    content: "";
    position: absolute;
    left: 50%;
    top: 0;
    height: 100%;
    border-left: 2px dashed var(--artwork-minor-blue-france);
}

.app-landing-diagram__arrow::after {
    // Arrow tip
    content: "▼";
    position: absolute;
    left: calc(50% - (var(--arrow-size) / 2 - 1px));
    bottom: calc(-1 * var(--arrow-size) / 5);
    font-size: var(--arrow-size);
    line-height: var(--arrow-size);
    color: var(--artwork-minor-blue-france);
}

@media screen and (min-width: 48em) {
    ul.app-landing-diagram {
        --item-padding: 0.5rem;
        --diagram-height: calc(2 * var(--item-padding) + var(--image-size) + 2rem); // Padding, image, and caption line

        width: unset;

        flex-direction: row;
        height: var(--diagram-height);
    }

    ul.app-landing-diagram > li {
        font-size: 1.125rem; // lg
    }

    .app-landing-diagram__arrow {
        width: unset;
        min-height: unset;

        border-width: 0 1rem;
        height: var(--diagram-height);
    }

    .app-landing-diagram__arrow::before {
        left: unset;
        border-left: unset;

        right: 0;
        top: 50%;
        height: 1px;
        width: 100%;
        border-top: 2px dashed var(--artwork-minor-blue-france);
    }

    .app-landing-diagram__arrow::after {
        left: unset;
        bottom: unset;

        content: "▶";
        right: calc(-1 * var(--arrow-size) / 5);
        top: calc(50% - var(--arrow-size) / 2);
    }
}

@media screen and (min-width: 62em) {
    ul.app-landing-diagram {
        --item-padding: 1rem;
    }

    ul.app-landing-diagram > li {
        font-size: 1.25rem; // xl
    }
}
