# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    server_timezone: '%env(APP_SERVER_TIMEZONE)%'
    client_timezone: '%env(APP_CLIENT_TIMEZONE)%'
    features: []

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $clientTimezone: '%client_timezone%'
            $projectDir: '%kernel.project_dir%'
            $eudonetParisOrgId: '%env(APP_EUDONET_PARIS_ORG_ID)%'
            $dialogOrgId: '%env(DIALOG_ORG_ID)%'
            $bacIdfDecreesFile: '%env(APP_BAC_IDF_DECREES_FILE)%'
            $bacIdfCitiesFile: '%env(APP_BAC_IDF_CITIES_FILE)%'
            $jopOrgId: '%env(APP_JOP_ORG_ID)%'
            $featureMap: '%features%'
            $cifsFilterSet: '%env(cifs_filterset:default::APP_CIFS_FILTERS)%'
            $melOrgId: '%env(APP_MEL_ORG_ID)%'
            $melCredentials: '%env(APP_MEL_LITTERALIS_CREDENTIALS)%' # format: 'user:pass'
            $fougeresOrgId: '%env(APP_FOUGERES_ORG_ID)%'
            $fougeresCredentials: '%env(APP_FOUGERES_LITTERALIS_CREDENTIALS)%' # format: 'user:pass'
            $lonsLeSaunierOrgId: '%env(APP_LONS_LE_SAUNIER_ORG_ID)%'
            $lonsLeSaunierCredentials: '%env(APP_LONS_LE_SAUNIER_LITTERALIS_CREDENTIALS)%' # format: 'user:pass'
            $metabaseSiteUrl: '%env(APP_METABASE_SITE_URL)%'
            $metabaseSecretKey: '%env(APP_METABASE_SECRET_KEY)%'
            $mediaLocation: '%env(APP_MEDIA_LOCATION)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Infrastructure/Persistence/Doctrine/Mapping'
            - '../src/Infrastructure/Persistence/Doctrine/Migrations'
            - '../src/Kernel.php'

    # ------------
    # Controllers
    # ------------
    App\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller/'
        tags: ['controller.service_arguments']

    # ----------------
    # Console commands
    # ----------------
    App\Infrastructure\Symfony\Command\:
        resource: '../src/Infrastructure/Symfony/Command/'
        tags: ['console.command']

    # -------------------
    # Command & Query bus
    # -------------------
    App\Infrastructure\Adapter\QueryBus:
        $queryBus: '@messenger.bus.queries'

    App\Infrastructure\Adapter\CommandBus:
        $commandBus: '@messenger.bus.commands'

    command_handlers:
        namespace: App\Application\
        resource: '%kernel.project_dir%/src/Application/**/Command/**/*Handler.php'
        public: true
        tags:
            - { name: 'messenger.message_handler', bus: 'messenger.bus.commands' }

    query_handlers:
        namespace: App\Application\
        resource: '%kernel.project_dir%/src/Application/**/Query/**/*Handler.php'
        public: true
        tags:
            - { name: 'messenger.message_handler', bus: 'messenger.bus.queries' }

    # ------------
    # Dates
    # ------------
    DateTimeInterface:
        class: DateTimeImmutable

    # --------------
    # Eudonet Paris
    # --------------

    App\Infrastructure\EudonetParis\EudonetParisExecutor:
        arguments: ['@logger']
        tags:
            - { name: monolog.logger, channel: eudonet_paris_import }

    App\Infrastructure\EudonetParis\EudonetParisClient:
        arguments:
            $credentials: '%env(APP_EUDONET_PARIS_CREDENTIALS)%'

    # --------------
    # Bac IDF
    # --------------

    App\Infrastructure\BacIdf\BacIdfExecutor:
        arguments: ['@logger']
        tags:
            - { name: monolog.logger, channel: bac_idf_import }

    # --------------
    # JOP
    # --------------

    App\Infrastructure\JOP\JOPExecutor:
        arguments: ['@logger']
        tags:
            - { name: monolog.logger, channel: jop_import }

    App\Infrastructure\JOP\JOPTransformer:
        arguments: ['@logger']
        tags:
            - { name: monolog.logger, channel: jop_import }

    # --------------
    # Litteralis
    # --------------

    App\Infrastructure\Symfony\Command\MELImportCommand:
        arguments: ['@logger']
        tags:
            - { name: monolog.logger, channel: litteralis_import }

    App\Infrastructure\Symfony\Command\FougeresImportCommand:
        arguments: ['@logger']
        tags:
            - { name: monolog.logger, channel: litteralis_import }

when@test:
    services:
        App\Tests\Mock\APIAdresseMockClient:
            # See: https://symfony.com/doc/current/service_container/service_decoration.html
            decorates: 'api.adresse.client'
            decoration_inner_name: 'App\Tests\Mock\APIAdresseMockClient::api.adresse.client'
        App\Tests\Mock\EudonetParis\EudonetParisMockHttpClient:
            decorates: 'eudonet_paris.http.client'
            decoration_inner_name: 'App\Tests\Mock\EudonetParis\EudonetParisMockHttpClient::eudonet_paris.http.client'
        App\Tests\Mock\Litteralis\LitteralisMockHttpClient:
            decorates: 'litteralis.wfs.http.client'
            decoration_inner_name: 'App\Tests\Mock\Litteralis\LitteralisMockHttpClient::litteralis.wfs.http.client'
        App\Tests\Mock\IgnGeocoderMockClient:
            decorates: 'ign.geocoder.client'
            decoration_inner_name: 'App\Tests\Mock\IgnGeocoderMockClient::ign.geocoder.client'
        App\Tests\Mock\DiaLogMockHttpClient:
            decorates: 'dialog.http.client'
            decoration_inner_name: 'App\Tests\Mock\DiaLogMockHttpClient::dialog.http.client'
            arguments: ['@http_kernel']
        App\Infrastructure\Adapter\DateUtils:
            class: App\Tests\Mock\DateUtilsMock
        Psr\Log\NullLogger: ~
        logger: '@Psr\Log\NullLogger'
